-- Creating table SDOT_TYPE by subsetting SDOT_COLCODE and SDOT_COLDESC
CREATE TABLE IF NOT EXISTS SDOT_TYPE (
    SDOT_COLCODE INT PRIMARY KEY,
    SDOT_COLDESC TEXT
);

INSERT INTO SDOT_TYPE (SDOT_COLCODE, SDOT_COLDESC)
SELECT DISTINCT SDOT_COLCODE, SDOT_COLDESC
FROM test
ORDER BY SDOT_COLCODE ASC;

-- Creating foreign key relation with SDOT_TYPE table
CREATE TABLE IF NOT EXISTS 'test_2'(
'X' TEXT, 'Y' TEXT, 'OBJECTID' TEXT, 'INCKEY' TEXT,
 'COLDETKEY' TEXT, 'REPORTNO' TEXT, 'STATUS' TEXT, 'ADDRTYPE' TEXT,
 'INTKEY' TEXT, 'LOCATION' TEXT, 'EXCEPTRSNCODE' TEXT, 'EXCEPTRSNDESC' TEXT,
 'SEVERITYCODE' TEXT, 'SEVERITYDESC' TEXT, 'COLLISIONTYPE' TEXT, 'PERSONCOUNT' TEXT,
 'PEDCOUNT' TEXT, 'PEDCYLCOUNT' TEXT, 'VEHCOUNT' TEXT, 'INJURIES' TEXT,
 'SERIOUSINJURIES' TEXT, 'FATALITIES' TEXT, 'INCDATE' TEXT, 'INCDTTM' TEXT,
 'JUNCTIONTYPE' TEXT, 'SDOT_COLCODE' INT, 'SDOT_COLDESC' TEXT, 'INATTENTIONIND' TEXT,
 'UNDERINFL' TEXT, 'WEATHER' TEXT, 'ROADCOND' TEXT, 'LIGHTCOND' TEXT,
 'PEDROWNOTGRNT' TEXT, 'SDOTCOLNUM' TEXT, 'SPEEDING' TEXT, 'ST_COLCODE' TEXT,
 'ST_COLDESC' TEXT, 'SEGLANEKEY' TEXT, 'CROSSWALKKEY' TEXT, 'HITPARKEDCAR' TEXT,
 'SOURCE' TEXT, 'SOURCEDESC' TEXT, 'ADDBY' TEXT, 'ADDDTTM' TEXT,
 'MODBY' TEXT, 'MODDTTM' TEXT, 'ST_PARTCPNT_TYPE' TEXT, 'ST_PARTCPNT_TYPE_DESC' TEXT,
 'ST_AGE' TEXT, 'ST_CITED' TEXT, 'ST_VEH_TYPE_CD' TEXT, 'ST_VEH_TYPE_DESC' TEXT,
 'ST_INJRY_CLSS_DESC' TEXT,
 FOREIGN KEY(SDOT_COLCODE) REFERENCES SDOT_TYPE(SDOT_COLCODE)
 );
 
INSERT INTO test_2(X, Y, OBJECTID, INCKEY,
COLDETKEY, REPORTNO, STATUS, ADDRTYPE,
INTKEY, LOCATION, EXCEPTRSNCODE, EXCEPTRSNDESC,
SEVERITYCODE, SEVERITYDESC, COLLISIONTYPE, PERSONCOUNT,
PEDCOUNT, PEDCYLCOUNT, VEHCOUNT, INJURIES,
SERIOUSINJURIES, FATALITIES, INCDATE, INCDTTM,
JUNCTIONTYPE, SDOT_COLCODE, SDOT_COLDESC, INATTENTIONIND,
UNDERINFL, WEATHER, ROADCOND, LIGHTCOND,
PEDROWNOTGRNT, SDOTCOLNUM, SPEEDING, ST_COLCODE,
ST_COLDESC, SEGLANEKEY, CROSSWALKKEY, HITPARKEDCAR,
SOURCE, SOURCEDESC, ADDBY, ADDDTTM,
MODBY, MODDTTM, ST_PARTCPNT_TYPE, ST_PARTCPNT_TYPE_DESC,
ST_AGE, ST_CITED, ST_VEH_TYPE_CD, ST_VEH_TYPE_DESC,
ST_INJRY_CLSS_DESC)

SELECT X, Y, OBJECTID, INCKEY,
COLDETKEY, REPORTNO, STATUS, ADDRTYPE,
INTKEY, LOCATION, EXCEPTRSNCODE, EXCEPTRSNDESC,
SEVERITYCODE, SEVERITYDESC, COLLISIONTYPE, PERSONCOUNT,
PEDCOUNT, PEDCYLCOUNT, VEHCOUNT, INJURIES,
SERIOUSINJURIES, FATALITIES, INCDATE, INCDTTM,
JUNCTIONTYPE, st.SDOT_COLCODE, st.SDOT_COLDESC, INATTENTIONIND,
UNDERINFL, WEATHER, ROADCOND, LIGHTCOND,
PEDROWNOTGRNT, SDOTCOLNUM, SPEEDING, ST_COLCODE,
ST_COLDESC, SEGLANEKEY, CROSSWALKKEY, HITPARKEDCAR,
SOURCE, SOURCEDESC, ADDBY, ADDDTTM,
MODBY, MODDTTM, ST_PARTCPNT_TYPE, ST_PARTCPNT_TYPE_DESC,
ST_AGE, ST_CITED, ST_VEH_TYPE_CD, ST_VEH_TYPE_DESC,
ST_INJRY_CLSS_DESC FROM test as t, SDOT_TYPE st
WHERE (t.SDOT_COLCODE = st.SDOT_COLCODE AND t.SDOT_COLDESC = st.SDOT_COLDESC);

ALTER TABLE test_2 DROP COLUMN SDOT_COLDESC;
DROP TABLE test;
ALTER TABLE test_2 RENAME TO test;

--------------------------------------------------------------------------------------
-- Creating conditions table

-- Creating a temp_conditions table for the purpose of grouping based on (weather, roadcond, lightcond) to get unique combinations 

CREATE TABLE IF NOT EXISTS temp_conditions1 AS SELECT WEATHER, ROADCOND, LIGHTCOND FROM test GROUP BY WEATHER, ROADCOND, LIGHTCOND;



-- Creating temp_conditions to assign a unique ID number (CONDIT_ID) to each distinct combination of WEATHER, ROADCOND, LIGHTCOND
-- NOTE: There are 447 unique combinations of weather/road/light conditions

CREATE TABLE IF NOT EXISTS CONDITIONS('CONDIT_ID' INTEGER PRIMARY KEY NOT NULL, 'WEATHER' TEXT, 'ROADCOND' TEXT, 'LIGHTCOND' TEXT); 
INSERT INTO conditions(WEATHER, ROADCOND, LIGHTCOND) SELECT WEATHER, ROADCOND, LIGHTCOND FROM temp_conditions1;

DROP TABLE temp_conditions1; -- Not needed anymore 



-- Doing it this way since doing 'SELECT *' is forbidden (?)
-- Includes an extra column 'CONDIT_ID' to hold the condit_id taken from the temp_conditions table
CREATE TABLE IF NOT EXISTS 'test_2'(
'X' TEXT, 'Y' TEXT, 'OBJECTID' TEXT, 'INCKEY' TEXT,
 'COLDETKEY' TEXT, 'REPORTNO' TEXT, 'STATUS' TEXT, 'ADDRTYPE' TEXT,
 'INTKEY' TEXT, 'LOCATION' TEXT, 'EXCEPTRSNCODE' TEXT, 'EXCEPTRSNDESC' TEXT,
 'SEVERITYCODE' TEXT, 'SEVERITYDESC' TEXT, 'COLLISIONTYPE' TEXT, 'PERSONCOUNT' TEXT,
 'PEDCOUNT' TEXT, 'PEDCYLCOUNT' TEXT, 'VEHCOUNT' TEXT, 'INJURIES' TEXT,
 'SERIOUSINJURIES' TEXT, 'FATALITIES' TEXT, 'INCDATE' TEXT, 'INCDTTM' TEXT,
 'JUNCTIONTYPE' TEXT, 'SDOT_COLCODE' INT, 'INATTENTIONIND' TEXT,
 'UNDERINFL' TEXT, 'WEATHER' TEXT, 'ROADCOND' TEXT, 'LIGHTCOND' TEXT, 'CONDIT_ID' INT,
 'PEDROWNOTGRNT' TEXT, 'SDOTCOLNUM' TEXT, 'SPEEDING' TEXT, 'ST_COLCODE' TEXT,
 'ST_COLDESC' TEXT, 'SEGLANEKEY' TEXT, 'CROSSWALKKEY' TEXT, 'HITPARKEDCAR' TEXT,
 'SOURCE' TEXT, 'SOURCEDESC' TEXT, 'ADDBY' TEXT, 'ADDDTTM' TEXT,
 'MODBY' TEXT, 'MODDTTM' TEXT, 'ST_PARTCPNT_TYPE' TEXT, 'ST_PARTCPNT_TYPE_DESC' TEXT,
 'ST_AGE' TEXT, 'ST_CITED' TEXT, 'ST_VEH_TYPE_CD' TEXT, 'ST_VEH_TYPE_DESC' TEXT,
 'ST_INJRY_CLSS_DESC' TEXT, FOREIGN KEY(CONDIT_ID) REFERENCES conditions(CONDIT_ID));



-- Now filling test_2 with data from test and temp_conditions

INSERT INTO test_2(X, Y, OBJECTID, INCKEY,
COLDETKEY, REPORTNO, STATUS, ADDRTYPE,
INTKEY, LOCATION, EXCEPTRSNCODE, EXCEPTRSNDESC,
SEVERITYCODE, SEVERITYDESC, COLLISIONTYPE, PERSONCOUNT,
PEDCOUNT, PEDCYLCOUNT, VEHCOUNT, INJURIES,
SERIOUSINJURIES, FATALITIES, INCDATE, INCDTTM,
JUNCTIONTYPE, SDOT_COLCODE, INATTENTIONIND,
UNDERINFL, WEATHER, ROADCOND, LIGHTCOND, CONDIT_ID,
PEDROWNOTGRNT, SDOTCOLNUM, SPEEDING, ST_COLCODE,
ST_COLDESC, SEGLANEKEY, CROSSWALKKEY, HITPARKEDCAR,
SOURCE, SOURCEDESC, ADDBY, ADDDTTM,
MODBY, MODDTTM, ST_PARTCPNT_TYPE, ST_PARTCPNT_TYPE_DESC,
ST_AGE, ST_CITED, ST_VEH_TYPE_CD, ST_VEH_TYPE_DESC,
ST_INJRY_CLSS_DESC)

SELECT X, Y, OBJECTID, INCKEY,
COLDETKEY, REPORTNO, STATUS, ADDRTYPE,
INTKEY, LOCATION, EXCEPTRSNCODE, EXCEPTRSNDESC,
SEVERITYCODE, SEVERITYDESC, COLLISIONTYPE, PERSONCOUNT,
PEDCOUNT, PEDCYLCOUNT, VEHCOUNT, INJURIES,
SERIOUSINJURIES, FATALITIES, INCDATE, INCDTTM,
JUNCTIONTYPE, SDOT_COLCODE, INATTENTIONIND,
UNDERINFL, t.WEATHER, t.ROADCOND, t.LIGHTCOND, c.CONDIT_ID,
PEDROWNOTGRNT, SDOTCOLNUM, SPEEDING, ST_COLCODE,
ST_COLDESC, SEGLANEKEY, CROSSWALKKEY, HITPARKEDCAR,
SOURCE, SOURCEDESC, ADDBY, ADDDTTM,
MODBY, MODDTTM, ST_PARTCPNT_TYPE, ST_PARTCPNT_TYPE_DESC,
ST_AGE, ST_CITED, ST_VEH_TYPE_CD, ST_VEH_TYPE_DESC,
ST_INJRY_CLSS_DESC FROM test as t, conditions as c
WHERE (t.WEATHER = c.WEATHER AND t.ROADCOND = c.ROADCOND AND t.LIGHTCOND = c.LIGHTCOND);

-- Cleaning up test_2; since we have condit_id and the conditions table, remove the (WEATHER, ROADCOND, LIGHTCOND) columns from the main table
ALTER TABLE test_2 DROP COLUMN WEATHER;
ALTER TABLE test_2 DROP COLUMN ROADCOND;
ALTER TABLE test_2 DROP COLUMN LIGHTCOND;

DROP TABLE test;
ALTER TABLE test_2 RENAME TO test;


--------------------------------------------------------------------------------------
-- Creating table SDOT_TYPE by subsetting SEVERITYCOLDE and SEVERITYDESC
CREATE TABLE IF NOT EXISTS SEVERITY (
  SEVERITYCODE INT PRIMARY KEY,
  SEVERITYDESC TEXT
);

INSERT INTO SEVERITY (SEVERITYCODE, SEVERITYDESC)
SELECT DISTINCT SEVERITYCODE, SEVERITYDESC
FROM test
ORDER BY SEVERITYCODE ASC;

-- Creating foreign key relation with SEVERITY table
CREATE TABLE IF NOT EXISTS 'test_2'(
'X' TEXT, 'Y' TEXT, 'OBJECTID' TEXT, 'INCKEY' TEXT,
 'COLDETKEY' TEXT, 'REPORTNO' TEXT, 'STATUS' TEXT, 'ADDRTYPE' TEXT,
 'INTKEY' TEXT, 'LOCATION' TEXT, 'EXCEPTRSNCODE' TEXT, 'EXCEPTRSNDESC' TEXT,
 'SEVERITYCODE' INT, 'SEVERITYDESC' TEXT, 'COLLISIONTYPE' TEXT, 'PERSONCOUNT' TEXT,
 'PEDCOUNT' TEXT, 'PEDCYLCOUNT' TEXT, 'VEHCOUNT' TEXT, 'INJURIES' TEXT,
 'SERIOUSINJURIES' TEXT, 'FATALITIES' TEXT, 'INCDATE' TEXT, 'INCDTTM' TEXT,
 'JUNCTIONTYPE' TEXT, 'SDOT_COLCODE' INT, 'INATTENTIONIND' TEXT,
 'UNDERINFL' TEXT, 'CONDIT_ID' INT,
 'PEDROWNOTGRNT' TEXT, 'SDOTCOLNUM' TEXT, 'SPEEDING' TEXT, 'ST_COLCODE' TEXT,
 'ST_COLDESC' TEXT, 'SEGLANEKEY' TEXT, 'CROSSWALKKEY' TEXT, 'HITPARKEDCAR' TEXT,
 'SOURCE' TEXT, 'SOURCEDESC' TEXT, 'ADDBY' TEXT, 'ADDDTTM' TEXT,
 'MODBY' TEXT, 'MODDTTM' TEXT, 'ST_PARTCPNT_TYPE' TEXT, 'ST_PARTCPNT_TYPE_DESC' TEXT,
 'ST_AGE' TEXT, 'ST_CITED' TEXT, 'ST_VEH_TYPE_CD' TEXT, 'ST_VEH_TYPE_DESC' TEXT,
 'ST_INJRY_CLSS_DESC' TEXT, FOREIGN KEY(SEVERITYCODE) REFERENCES SEVERITY(SEVERITYCODE));

INSERT INTO test_2(X, Y, OBJECTID, INCKEY,
COLDETKEY, REPORTNO, STATUS, ADDRTYPE,
INTKEY, LOCATION, EXCEPTRSNCODE, EXCEPTRSNDESC,
SEVERITYCODE, SEVERITYDESC, COLLISIONTYPE, PERSONCOUNT,
PEDCOUNT, PEDCYLCOUNT, VEHCOUNT, INJURIES,
SERIOUSINJURIES, FATALITIES, INCDATE, INCDTTM,
JUNCTIONTYPE, SDOT_COLCODE, INATTENTIONIND,
UNDERINFL, CONDIT_ID,
PEDROWNOTGRNT, SDOTCOLNUM, SPEEDING, ST_COLCODE,
ST_COLDESC, SEGLANEKEY, CROSSWALKKEY, HITPARKEDCAR,
SOURCE, SOURCEDESC, ADDBY, ADDDTTM,
MODBY, MODDTTM, ST_PARTCPNT_TYPE, ST_PARTCPNT_TYPE_DESC,
ST_AGE, ST_CITED, ST_VEH_TYPE_CD, ST_VEH_TYPE_DESC,
ST_INJRY_CLSS_DESC)

SELECT X, Y, OBJECTID, INCKEY,
COLDETKEY, REPORTNO, STATUS, ADDRTYPE,
INTKEY, LOCATION, EXCEPTRSNCODE, EXCEPTRSNDESC,
s.SEVERITYCODE, s.SEVERITYDESC, COLLISIONTYPE, PERSONCOUNT,
PEDCOUNT, PEDCYLCOUNT, VEHCOUNT, INJURIES,
SERIOUSINJURIES, FATALITIES, INCDATE, INCDTTM,
JUNCTIONTYPE, SDOT_COLCODE, INATTENTIONIND,
UNDERINFL, CONDIT_ID,
PEDROWNOTGRNT, SDOTCOLNUM, SPEEDING, ST_COLCODE,
ST_COLDESC, SEGLANEKEY, CROSSWALKKEY, HITPARKEDCAR,
SOURCE, SOURCEDESC, ADDBY, ADDDTTM,
MODBY, MODDTTM, ST_PARTCPNT_TYPE, ST_PARTCPNT_TYPE_DESC,
ST_AGE, ST_CITED, ST_VEH_TYPE_CD, ST_VEH_TYPE_DESC,
ST_INJRY_CLSS_DESC FROM test as t, severity as s
WHERE (t.SEVERITYCODE = s.SEVERITYCODE AND t.SEVERITYDESC = s.SEVERITYDESC);

ALTER TABLE test_2 DROP COLUMN SEVERITYDESC;

DROP TABLE test;
ALTER TABLE test_2 RENAME TO test;


--------------------------------------------------------------------------------------
-- Creating table SDOT_TYPE by subsetting ST_COLCODE and ST_COLDESC

CREATE TABLE ST_TYPE (
    ST_COLCODE INT PRIMARY KEY, 
    ST_COLDESC TEXT
);

INSERT INTO ST_TYPE (ST_COLCODE, ST_COLDESC)
SELECT DISTINCT ST_COLCODE, ST_COLDESC
FROM test 
ORDER BY ST_COLCODE ASC;

-- Creating foreign key relation with ST_TYPE table
CREATE TABLE IF NOT EXISTS 'test_2'(
'X' TEXT, 'Y' TEXT, 'OBJECTID' TEXT, 'INCKEY' TEXT,
 'COLDETKEY' TEXT, 'REPORTNO' TEXT, 'STATUS' TEXT, 'ADDRTYPE' TEXT,
 'INTKEY' TEXT, 'LOCATION' TEXT, 'EXCEPTRSNCODE' TEXT, 'EXCEPTRSNDESC' TEXT,
 'SEVERITYCODE' INT, 'COLLISIONTYPE' TEXT, 'PERSONCOUNT' TEXT,
 'PEDCOUNT' TEXT, 'PEDCYLCOUNT' TEXT, 'VEHCOUNT' TEXT, 'INJURIES' TEXT,
 'SERIOUSINJURIES' TEXT, 'FATALITIES' TEXT, 'INCDATE' TEXT, 'INCDTTM' TEXT,
 'JUNCTIONTYPE' TEXT, 'SDOT_COLCODE' INT, 'INATTENTIONIND' TEXT,
 'UNDERINFL' TEXT, 'CONDIT_ID' INT,
 'PEDROWNOTGRNT' TEXT, 'SDOTCOLNUM' TEXT, 'SPEEDING' TEXT, 'ST_COLCODE' INT,
 'ST_COLDESC' TEXT, 'SEGLANEKEY' TEXT, 'CROSSWALKKEY' TEXT, 'HITPARKEDCAR' TEXT,
 'SOURCE' TEXT, 'SOURCEDESC' TEXT, 'ADDBY' TEXT, 'ADDDTTM' TEXT,
 'MODBY' TEXT, 'MODDTTM' TEXT, 'ST_PARTCPNT_TYPE' TEXT, 'ST_PARTCPNT_TYPE_DESC' TEXT,
 'ST_AGE' TEXT, 'ST_CITED' TEXT, 'ST_VEH_TYPE_CD' TEXT, 'ST_VEH_TYPE_DESC' TEXT,
 'ST_INJRY_CLSS_DESC' TEXT, FOREIGN KEY(SEVERITYCODE) REFERENCES SEVERITY(SEVERITYCODE));

INSERT INTO test_2(X, Y, OBJECTID, INCKEY,
COLDETKEY, REPORTNO, STATUS, ADDRTYPE,
INTKEY, LOCATION, EXCEPTRSNCODE, EXCEPTRSNDESC,
SEVERITYCODE, COLLISIONTYPE, PERSONCOUNT,
PEDCOUNT, PEDCYLCOUNT, VEHCOUNT, INJURIES,
SERIOUSINJURIES, FATALITIES, INCDATE, INCDTTM,
JUNCTIONTYPE, SDOT_COLCODE, INATTENTIONIND,
UNDERINFL, CONDIT_ID,
PEDROWNOTGRNT, SDOTCOLNUM, SPEEDING, ST_COLCODE,
ST_COLDESC, SEGLANEKEY, CROSSWALKKEY, HITPARKEDCAR,
SOURCE, SOURCEDESC, ADDBY, ADDDTTM,
MODBY, MODDTTM, ST_PARTCPNT_TYPE, ST_PARTCPNT_TYPE_DESC,
ST_AGE, ST_CITED, ST_VEH_TYPE_CD, ST_VEH_TYPE_DESC,
ST_INJRY_CLSS_DESC)

SELECT X, Y, OBJECTID, INCKEY,
COLDETKEY, REPORTNO, STATUS, ADDRTYPE,
INTKEY, LOCATION, EXCEPTRSNCODE, EXCEPTRSNDESC,
SEVERITYCODE, COLLISIONTYPE, PERSONCOUNT,
PEDCOUNT, PEDCYLCOUNT, VEHCOUNT, INJURIES,
SERIOUSINJURIES, FATALITIES, INCDATE, INCDTTM,
JUNCTIONTYPE, SDOT_COLCODE, INATTENTIONIND,
UNDERINFL, CONDIT_ID,
PEDROWNOTGRNT, SDOTCOLNUM, SPEEDING, st.ST_COLCODE,
st.ST_COLDESC, SEGLANEKEY, CROSSWALKKEY, HITPARKEDCAR,
SOURCE, SOURCEDESC, ADDBY, ADDDTTM,
MODBY, MODDTTM, ST_PARTCPNT_TYPE, ST_PARTCPNT_TYPE_DESC,
ST_AGE, ST_CITED, ST_VEH_TYPE_CD, ST_VEH_TYPE_DESC,
ST_INJRY_CLSS_DESC FROM test as t, ST_TYPE as st
WHERE (t.ST_COLCODE = st.ST_COLCODE AND t.ST_COLDESC = st.ST_COLDESC);

ALTER TABLE test_2 DROP COLUMN ST_COLDESC;
DROP TABLE test;
ALTER TABLE test_2 RENAME TO collisions;

-- Dropping columns with no values
ALTER TABLE collisions DROP COLUMN SOURCE;
ALTER TABLE collisions DROP COLUMN SOURCEDESC;
ALTER TABLE collisions DROP COLUMN ADDBY;
ALTER TABLE collisions DROP COLUMN ADDDTTM;
ALTER TABLE collisions DROP COLUMN MODBY;
ALTER TABLE collisions DROP COLUMN MODDTTM;
ALTER TABLE collisions DROP COLUMN ST_PARTCPNT_TYPE;
ALTER TABLE collisions DROP COLUMN ST_PARTCPNT_TYPE_DESC;
ALTER TABLE collisions DROP COLUMN ST_AGE;
ALTER TABLE collisions DROP COLUMN ST_CITED;
ALTER TABLE collisions DROP COLUMN ST_VEH_TYPE_CD;
ALTER TABLE collisions DROP COLUMN ST_VEH_TYPE_DESC;
ALTER TABLE collisions DROP COLUMN ST_INJRY_CLSS_DESC;